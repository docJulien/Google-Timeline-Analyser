@using APS.Areas.Fitness.Models
@using Kendo.Mvc.UI
@using APS.Resources
@{
    Layout = "_Layout";
    ViewBag.Title = Label.Rapport;
}
@section Scripts {
    <script language="jscript">
        $(document).ready(function () {
            $("#tabstrip").kendoTabStrip({
                animation: { open: { effects: "fadeIn" } }
            });

            //tests
            //var chart = $("#chartTransport").data("kendoChart");
            //chart.dataSource.filter({ field: "Year", operator: "gte", value: 2020 });
            //chart.refresh();
        });
    </script>
    <script src="~/js/CommonScripts.js"></script>
}        
@section Styles
{
    <style>
        #tabstrip {
            height: 470px;
        }
        .k-content {
            border-color: rgba(0,0,0,.08);
            color: #656565;
            background-color: #fff;
        }
        .k-content {
            outline: 0;
        }
    </style>
}

<div class="content grid-wrapper">
    <h2>@ViewBag.Title</h2>
    <div id="tabstrip">
        <ul>
            <li class="k-state-active">
                Transport
            </li>
            <li>
                Sports
            </li>
        </ul>

        <div class="grid-wrapper">

            @(Html.Kendo().Chart<TransportDataVM>()
                .Name("chartTransport")
                .Title("Transport")
                .DataSource(dataSource => dataSource
                    .Read(read => read.Action("ReadTransport", "Chart"))
                    .Sort(sort =>
                    {
                        sort.Add(model => model.MonthDate);
                    })
                )
                .SeriesDefaults(s=> s.Line()
                    .Style(ChartLineStyle.Smooth)
                    .CategoryField("MonthDate")
                    .MissingValues(ChartAreaMissingValues.Zero)
                    .Stack(false)
                )
                .Series(series => {
                    series.Line(model => model.InBus).Name("Bus (km)");
                    series.Line(model => model.InPassengerVehicle).Name("Voiture (km)");
                    series.Line(model => model.InSubway).Name("Métro (km)");
                    series.Line(model => model.InTrain).Name("Train (km)");
                    series.Line(model => model.Motorcycling).Name("Moto (km)");
                    series.Line(model => model.Flying).Name("Avion (km)");
                })
                .Legend(legend => legend
                    .Position(ChartLegendPosition.Bottom)
                )
                .CategoryAxis(axis => axis
                    .Type(ChartCategoryAxisType.Date)
                    .BaseUnit(ChartAxisBaseUnit.Months)
                    .Field("MonthDate")
                    .Labels(labels => labels.Format("yyyy-MM"))
                    .Line(line => line.Visible(false))
                    .MajorGridLines(lines => lines.Visible(false))
                ))
        </div>
        <div class="grid-wrapper">
            @(Html.Kendo().Chart<ReportDataVM>()
                .Name("chartSport")
                .Title("Sports")
                .DataSource(dataSource => dataSource
                    .Read(read => read.Action("ReadSport", "Chart"))
                    .Sort(sort =>
                    {
                        sort.Add(model => model.MonthDate);
                    })
                )
                .SeriesDefaults(s=>s.Area()
                    .CategoryField("MonthDate")
                    .MissingValues(ChartAreaMissingValues.Zero)
                    .Stack(true)
                )
                .Series(series =>
                {
                    series.Area(model => model.Cycling).Name("Vélo (km)");
                    series.Area(model => model.Hiking).Name("Rando (km)");
                    series.Area(model => model.Running).Name("Course (km)");
                    series.Area(model => model.Walking).Name("Marche (km)");
                })
                .Legend(legend => legend
                    .Position(ChartLegendPosition.Bottom)
                )
                .CategoryAxis(axis => axis
                    .Type(ChartCategoryAxisType.Date)
                    .Field("MonthDate")
                    .Labels(labels => labels.Format("yyyy-MM"))
                    .Line(line => line.Visible(false))
                    .MajorGridLines(lines => lines.Visible(false))
                    //.Justify()
                )
            )
        </div>
    </div>
</div>